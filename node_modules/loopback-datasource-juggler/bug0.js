var assert = require('assert');
var jdb = require('./');
var ModelBuilder = jdb.ModelBuilder;
var DataSource = jdb.DataSource;
var Memory = require('./lib/connectors/memory');

var memory = new DataSource({connector: Memory});
var modelBuilder = memory.modelBuilder;

var Model = modelBuilder.define('Model');
var PersistedModel = Model.extend('PersistedModel');
var Change = PersistedModel.extend('Change', {
  id: {type: String, generated: true, id: true},
  rev: {type: String},
  prev: {type: String},
  checkpoint: {type: Number},
  modelName: {type: String},
  modelId: {type: String}
});

Change.getter.id = function() {
    var hasModel = this.modelName && this.modelId;
    if(!hasModel) return null;

    return Change.idForModel(this.modelName, this.modelId);
};

Change.idForModel = function(modelName, modelId) {
  return 'id:' + modelName + ':' + modelId;
};

var ModelChange = Change.extend('model-Change');
ModelChange.attachTo(memory);

new ModelChange({
  id: Change.idForModel('Model', 1),
  modelName: 'Model',
  modelId: 1
}).save(function(err, change) {
  if (err) throw err;
  console.log('created', change.id, change);
  ModelChange.findById(change.id, function(err, found) {
    if (err) throw err;
    console.log('found', found);
    assert(found);
  });
});
